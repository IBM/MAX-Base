language: python

python:
  - 3.6

services:
  - docker

before_install:
  - if [[ "$TRAVIS_BRANCH" == "master" ]]; then
      VERSION=latest;
    else
      VERSION=$TRAVIS_BRANCH;
    fi

install:
  - docker build -f "$DOCKERFILE" -t mborgard/max-base:"$IMAGE"-"$ARCH"-"$VERSION" .

before_script:
  - docker run -it --rm -d -p 5000:5000 mborgard/max-base:"$IMAGE"-"$ARCH"-"$VERSION"
  - sleep 10

script:
  - docker ps | grep ajbozarth/max-base:"$IMAGE"-"$ARCH"-"$VERSION"

after_success:
  - if [[ "$IMAGE" != "test" && "$TRAVIS_PULL_REQUEST" == "false" ]] && [[ "$TRAVIS_BRANCH" == "master" || "$TRAVIS_BRANCH" == "$TRAVIS_TAG" ]]; then
      echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin;
      docker push ajbozarth/max-base:"$IMAGE"-"$ARCH"-"$VERSION";
    fi

matrix:
  include:
  - os: linux
    env: DOCKERFILE=Dockerfile IMAGE=test ARCH=x86_64
  - os: linux
    env: DOCKERFILE=Dockerfile.pai IMAGE=powerai ARCH=x86_64
  - os: linux-ppc64le
    env: DOCKERFILE=Dockerfile.pai IMAGE=powerai ARCH=ppc64le
  - if: type = push AND (branch = master OR tag IS present)
    stage: "Docker Manifest"
    addons:
      apt:
        packages:
          - docker-ce
    install:
    before_script:
    script:
      - export DOCKER_CLI_EXPERIMENTAL=enabled
      - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin;
      - docker pull mborgard/max-base:powerai-ppc64le-"$VERSION";
      - docker pull mborgard/max-base:powerai-x86_64-"$VERSION";
      - docker manifest create mborgard/max-base:powerai-"$VERSION" mborgard/max-base:powerai-ppc64le-"$VERSION" mborgard/max-base:powerai-x86_64-"$VERSION";
      - docker manifest push mborgard/max-base:powerai-"$VERSION";
    after_success:
