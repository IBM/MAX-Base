language: python

python:
  - 3.6

os:
  - linux
  - linux-ppc64le

env:
  - DOCKERFILE=Dockerfile IMAGE=max-base
  - DOCKERFILE=Dockerfile.pai IMAGE=max-base-powerai

matrix:
  exclude:
  - env: DOCKERFILE=Dockerfile IMAGE=max-base
    os: linux-ppc64le

dist: xenial

services:
  - docker

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux-ppc64le" ]]; then
       ARCH=ppc64le;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
       ARCH=x86_64;
    fi
  - mkdir -p ~/.docker
  - echo '{"experimental":"enabled"}' | tee ~/.docker/config.json 
  - sudo service docker restart

install:
  - docker build -f "$DOCKERFILE" -t "$REPO"/"$IMAGE":"$ARCH"-latest .

before_script:
  - docker run -it --rm -d -p 5000:5000 "$REPO"/"$IMAGE":"$ARCH"-latest
  - sleep 10

script:
  - docker ps | grep "$IMAGE"

after_success:
  - if [[ "$IMAGE" != "max-base" ]]; then
      docker login -u "$REPO_USER" -p "$REPO_PASS";
      docker push "$REPO"/"$IMAGE":"$ARCH"-latest;
      docker pull "$REPO"/"$IMAGE":ppc64le-latest;
      docker pull "$REPO"/"$IMAGE":x86_64-latest;
      docker manifest create "$REPO"/"$IMAGE":latest "$REPO"/"$IMAGE":ppc64le-latest "$REPO"/"$IMAGE":x86_64-latest;
      docker manifest push "$REPO"/"$IMAGE":latest;
    fi

